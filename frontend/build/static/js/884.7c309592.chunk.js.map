{"version":3,"file":"static/js/884.7c309592.chunk.js","mappings":"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","sources":["app/views/sessions/JwtRegister.jsx"],"sourcesContent":["import { useTheme } from '@emotion/react';\nimport { LoadingButton } from '@mui/lab';\nimport { Card, Checkbox, Grid, TextField } from '@mui/material';\nimport { Box, styled } from '@mui/material';\nimport { Paragraph } from 'app/components/Typography';\nimport useAuth from 'app/hooks/useAuth';\nimport { Formik } from 'formik';\nimport { useState } from 'react';\nimport { NavLink, useNavigate } from 'react-router-dom';\nimport * as Yup from 'yup';\n\nconst FlexBox = styled(Box)(() => ({ display: 'flex', alignItems: 'center' }));\n\nconst JustifyBox = styled(FlexBox)(() => ({ justifyContent: 'center' }));\n\nconst ContentBox = styled(JustifyBox)(() => ({\n  height: '100%',\n  padding: '32px',\n  background: 'rgba(0, 0, 0, 0.01)'\n}));\n\nconst JWTRegister = styled(JustifyBox)(() => ({\n  background: '#1A2038',\n  minHeight: '100vh !important',\n  '& .card': {\n    maxWidth: 800,\n    minHeight: 400,\n    margin: '1rem',\n    display: 'flex',\n    borderRadius: 12,\n    alignItems: 'center'\n  }\n}));\n\n// inital login credentials\nconst initialValues = {\n  email: '',\n  password: '',\n  username: '',\n  remember: true\n};\n\n// form field validation schema\nconst validationSchema = Yup.object().shape({\n  password: Yup.string()\n    .min(6, 'Password must be 6 character length')\n    .required('Password is required!'),\n  email: Yup.string().email('Invalid Email address').required('Email is required!')\n});\n\nconst JwtRegister = () => {\n  const theme = useTheme();\n  const { register } = useAuth();\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n\n  const handleFormSubmit = (values) => {\n    setLoading(true);\n\n    try {\n      register(values.email, values.username, values.password);\n      navigate('/');\n      setLoading(false);\n    } catch (e) {\n      console.log(e);\n      setLoading(false);\n    }\n  };\n\n  return (\n    <JWTRegister>\n      <Card className=\"card\">\n        <Grid container>\n          <Grid item sm={6} xs={12}>\n            <ContentBox>\n              <img\n                width=\"100%\"\n                alt=\"Register\"\n                src=\"/assets/images/illustrations/posting_photo.svg\"\n              />\n            </ContentBox>\n          </Grid>\n\n          <Grid item sm={6} xs={12}>\n            <Box p={4} height=\"100%\">\n              <Formik\n                onSubmit={handleFormSubmit}\n                initialValues={initialValues}\n                validationSchema={validationSchema}\n              >\n                {({ values, errors, touched, handleChange, handleBlur, handleSubmit }) => (\n                  <form onSubmit={handleSubmit}>\n                    <TextField\n                      fullWidth\n                      size=\"small\"\n                      type=\"text\"\n                      name=\"username\"\n                      label=\"Username\"\n                      variant=\"outlined\"\n                      onBlur={handleBlur}\n                      value={values.username}\n                      onChange={handleChange}\n                      helperText={touched.username && errors.username}\n                      error={Boolean(errors.username && touched.username)}\n                      sx={{ mb: 3 }}\n                    />\n\n                    <TextField\n                      fullWidth\n                      size=\"small\"\n                      type=\"email\"\n                      name=\"email\"\n                      label=\"Email\"\n                      variant=\"outlined\"\n                      onBlur={handleBlur}\n                      value={values.email}\n                      onChange={handleChange}\n                      helperText={touched.email && errors.email}\n                      error={Boolean(errors.email && touched.email)}\n                      sx={{ mb: 3 }}\n                    />\n                    <TextField\n                      fullWidth\n                      size=\"small\"\n                      name=\"password\"\n                      type=\"password\"\n                      label=\"Password\"\n                      variant=\"outlined\"\n                      onBlur={handleBlur}\n                      value={values.password}\n                      onChange={handleChange}\n                      helperText={touched.password && errors.password}\n                      error={Boolean(errors.password && touched.password)}\n                      sx={{ mb: 2 }}\n                    />\n\n                    <FlexBox gap={1} alignItems=\"center\">\n                      <Checkbox\n                        size=\"small\"\n                        name=\"remember\"\n                        onChange={handleChange}\n                        checked={values.remember}\n                        sx={{ padding: 0 }}\n                      />\n\n                      <Paragraph fontSize={13}>\n                        I have read and agree to the terms of service.\n                      </Paragraph>\n                    </FlexBox>\n\n                    <LoadingButton\n                      type=\"submit\"\n                      color=\"primary\"\n                      loading={loading}\n                      variant=\"contained\"\n                      sx={{ mb: 2, mt: 3 }}\n                    >\n                      Regiser\n                    </LoadingButton>\n\n                    <Paragraph>\n                      Already have an account?\n                      <NavLink\n                        to=\"/session/signin\"\n                        style={{ color: theme.palette.primary.main, marginLeft: 5 }}\n                      >\n                        Login\n                      </NavLink>\n                    </Paragraph>\n                  </form>\n                )}\n              </Formik>\n            </Box>\n          </Grid>\n        </Grid>\n      </Card>\n    </JWTRegister>\n  );\n};\n\nexport default JwtRegister;\n"],"names":["FlexBox","styled","Box","display","alignItems","JustifyBox","justifyContent","ContentBox","height","padding","background","JWTRegister","minHeight","maxWidth","margin","borderRadius","initialValues","email","password","username","remember","validationSchema","Yup","shape","min","required","theme","useTheme","register","useAuth","navigate","useNavigate","_useState","useState","_useState2","_slicedToArray","loading","setLoading","_jsx","children","Card","className","_jsxs","Grid","container","item","sm","xs","width","alt","src","p","Formik","onSubmit","values","e","console","log","_ref","errors","touched","handleChange","handleBlur","handleSubmit","TextField","fullWidth","size","type","name","label","variant","onBlur","value","onChange","helperText","error","Boolean","sx","mb","gap","Checkbox","checked","Paragraph","fontSize","LoadingButton","color","mt","NavLink","to","style","palette","primary","main","marginLeft"],"sourceRoot":""}